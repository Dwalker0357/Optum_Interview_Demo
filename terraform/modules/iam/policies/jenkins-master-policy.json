{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "EC2ManagementAccess",
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeInstances",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeImages",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeTags",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeRegions",
        "ec2:RunInstances",
        "ec2:TerminateInstances",
        "ec2:StopInstances",
        "ec2:StartInstances",
        "ec2:RebootInstances",
        "ec2:CreateTags",
        "ec2:DeleteTags"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "ec2:Region": "${aws:RequestedRegion}"
        }
      }
    },
    {
      "Sid": "EC2InstanceLimitations",
      "Effect": "Allow",
      "Action": [
        "ec2:RunInstances"
      ],
      "Resource": [
        "arn:aws:ec2:*:*:instance/*",
        "arn:aws:ec2:*:*:volume/*",
        "arn:aws:ec2:*:*:network-interface/*"
      ],
      "Condition": {
        "StringEquals": {
          "ec2:InstanceType": [
            "t3.micro",
            "t3.small",
            "t3.medium",
            "m5.large"
          ]
        },
        "StringLike": {
          "ec2:CreateAction": "RunInstances"
        }
      }
    },
    {
      "Sid": "IAMPassRoleForJenkinsAgents",
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "arn:aws:iam::*:role/*jenkins-agent-role*"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "ec2.amazonaws.com"
        }
      }
    },
    {
      "Sid": "IAMReadOnlyAccess",
      "Effect": "Allow",
      "Action": [
        "iam:GetRole",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:ListRoles",
        "iam:ListPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListInstanceProfiles",
        "iam:GetInstanceProfile"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SecretsManagerJenkinsAccess",
      "Effect": "Allow",
      "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret",
        "secretsmanager:ListSecrets"
      ],
      "Resource": [
        "arn:aws:secretsmanager:*:*:secret:*jenkins*",
        "arn:aws:secretsmanager:*:*:secret:*nessus*", 
        "arn:aws:secretsmanager:*:*:secret:*demo*",
        "arn:aws:secretsmanager:*:*:secret:*api*",
        "arn:aws:secretsmanager:*:*:secret:*ssh*",
        "arn:aws:secretsmanager:*:*:secret:*vpn*",
        "arn:aws:secretsmanager:*:*:secret:common/*"
      ]
    },
    {
      "Sid": "S3JenkinsBucketAccess",
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:ListBucket",
        "s3:GetBucketLocation",
        "s3:GetBucketVersioning",
        "s3:ListBucketVersions"
      ],
      "Resource": [
        "arn:aws:s3:::*-jenkins-artifacts/*",
        "arn:aws:s3:::*-jenkins-artifacts",
        "arn:aws:s3:::*-jenkins-logs/*",
        "arn:aws:s3:::*-jenkins-logs",
        "arn:aws:s3:::*-terraform-state/*",
        "arn:aws:s3:::*-terraform-state"
      ]
    },
    {
      "Sid": "EFSJenkinsAccess",
      "Effect": "Allow",
      "Action": [
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeMountTargets",
        "elasticfilesystem:DescribeAccessPoints",
        "elasticfilesystem:ClientMount",
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:ClientRootAccess"
      ],
      "Resource": [
        "arn:aws:elasticfilesystem:*:*:file-system/*",
        "arn:aws:elasticfilesystem:*:*:access-point/*"
      ],
      "Condition": {
        "StringLike": {
          "elasticfilesystem:AccessPointArn": "*jenkins*"
        }
      }
    },
    {
      "Sid": "CloudWatchJenkinsLogs",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams"
      ],
      "Resource": [
        "arn:aws:logs:*:*:log-group:/aws/ec2/jenkins/*",
        "arn:aws:logs:*:*:log-group:/jenkins/*"
      ]
    },
    {
      "Sid": "CloudWatchMetrics",
      "Effect": "Allow",
      "Action": [
        "cloudwatch:PutMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:ListMetrics"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "cloudwatch:namespace": [
            "Jenkins",
            "AWS/EC2",
            "CWAgent"
          ]
        }
      }
    },
    {
      "Sid": "SSMParameterStoreJenkins",
      "Effect": "Allow",
      "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "ssm:PutParameter"
      ],
      "Resource": [
        "arn:aws:ssm:*:*:parameter/jenkins/*",
        "arn:aws:ssm:*:*:parameter/common/*"
      ]
    },
    {
      "Sid": "SSMCommandExecution",
      "Effect": "Allow",
      "Action": [
        "ssm:SendCommand",
        "ssm:ListCommands",
        "ssm:ListCommandInvocations",
        "ssm:GetCommandInvocation"
      ],
      "Resource": [
        "arn:aws:ec2:*:*:instance/*",
        "arn:aws:ssm:*:*:document/AWS-RunShellScript",
        "arn:aws:ssm:*:*:document/AWS-RunPowerShellScript"
      ],
      "Condition": {
        "StringLike": {
          "ssm:resourceTag/Environment": "*"
        }
      }
    },
    {
      "Sid": "AutoScalingAccess",
      "Effect": "Allow",
      "Action": [
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:UpdateAutoScalingGroup"
      ],
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "autoscaling:ResourceTag/Service": "jenkins-agent"
        }
      }
    },
    {
      "Sid": "KMSDataPlaneUse",
      "Effect": "Allow",
      "Action": [
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*",
        "kms:DescribeKey",
        "kms:CreateGrant"
      ],
      "Resource": [
        "arn:aws:kms:*:*:alias/optum-*",
        "arn:aws:kms:*:*:key/*"
      ],
      "Condition": {
        "StringEquals": {
          "kms:ViaService": [
            "s3.*.amazonaws.com",
            "secretsmanager.*.amazonaws.com",
            "ssm.*.amazonaws.com",
            "ec2.*.amazonaws.com",
            "rds.*.amazonaws.com",
            "elasticfilesystem.*.amazonaws.com"
          ]
        }
      }
    },
    {
      "Sid": "KMSKeyManagementForOptum",
      "Effect": "Allow",
      "Action": [
        "kms:CreateKey",
        "kms:PutKeyPolicy",
        "kms:CreateAlias",
        "kms:DeleteAlias",
        "kms:UpdateAlias",
        "kms:EnableKeyRotation",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:UpdateKeyDescription",
        "kms:ScheduleKeyDeletion",
        "kms:CancelKeyDeletion",
        "kms:ListResourceTags"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:RequestedRegion": [
            "eu-west-1",
            "us-east-1",
            "ap-southeast-1"
          ]
        }
      }
    },
    {
      "Sid": "SNSNotifications",
      "Effect": "Allow",
      "Action": [
        "sns:Publish"
      ],
      "Resource": [
        "arn:aws:sns:*:*:jenkins-*"
      ]
    },
    {
      "Sid": "ECRAccess",
      "Effect": "Allow",
      "Action": [
        "ecr:GetAuthorizationToken",
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage",
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
      ],
      "Resource": "*"
    },
    {
      "Sid": "TerraformRDSOperations",
      "Effect": "Allow",
      "Action": [
        "rds:DescribeDBSubnetGroups",
        "rds:CreateDBSubnetGroup",
        "rds:ModifyDBSubnetGroup",
        "rds:DeleteDBSubnetGroup",
        "rds:AddTagsToResource",
        "rds:RemoveTagsFromResource",
        "rds:ListTagsForResource"
      ],
      "Resource": "*"
    },
    {
      "Sid": "TerraformLambdaOperations",
      "Effect": "Allow",
      "Action": [
        "lambda:GetFunction",
        "lambda:ListFunctions",
        "lambda:GetFunctionConfiguration",
        "lambda:GetPolicy",
        "lambda:CreateFunction",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:DeleteFunction",
        "lambda:AddPermission",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:ListTags"
      ],
      "Resource": "*"
    },
    {
      "Sid": "TerraformEventBridgeOperations",
      "Effect": "Allow",
      "Action": [
        "events:DescribeRule",
        "events:ListRules",
        "events:PutRule",
        "events:DeleteRule",
        "events:EnableRule",
        "events:DisableRule",
        "events:PutTargets",
        "events:RemoveTargets",
        "events:ListTargetsByRule",
        "events:TagResource",
        "events:UntagResource",
        "events:ListTagsForResource"
      ],
      "Resource": "*"
    },
    {
      "Sid": "TerraformInfrastructureManagement",
      "Effect": "Allow",
      "Action": [
        "ec2:*",
        "iam:*",
        "elasticloadbalancing:*",
        "autoscaling:*", 
        "elasticfilesystem:*",
        "s3:*",
        "secretsmanager:*",
        "kms:*",
        "sns:*",
        "cloudwatch:*",
        "logs:*",
        "ssm:*",
        "route53:*",
        "acm:*",
        "wafv2:*",
        "guardduty:*",
        "config:*",
        "cloudtrail:*",
        "lambda:*",
        "events:*",
        "dynamodb:*"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:RequestedRegion": [
            "eu-west-1",
            "us-east-1",
            "ap-southeast-1"
          ]
        }
      }
    }
  ]
}
